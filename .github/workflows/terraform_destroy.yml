name: Terraform Destory

on:
  workflow_dispatch:  # Allow manual triggering

env: # hard-code resource names
  AWS_REGION: us-east-1
  TFSTATE_KEY: application-signals/demo-applications
  TFSTATE_BUCKET: tfstate-0b6c1770-b7ce-423a-9b2d-781805b91dcc # prerequisite: manually create a bucket using  "aws s3 mb s3://tfstate-$(uuidgen | tr A-Z a-z)" and paste bucket name here.
  TFSTATE_REGION: us-east-1
  TF_VAR_cluster_name: app-signals-demo
  TF_VAR_cloudwatch_observability_addon_version: v3.6.0-eksbuild.2

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 5

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform/eks
        run: |
          terraform init -backend-config="bucket=${{ env.TFSTATE_BUCKET }}" \
                        -backend-config="key=${{ env.TFSTATE_KEY }}" \
                        -backend-config="region=${{ env.TFSTATE_REGION }}"

      - name: Terraform Apply
        working-directory: terraform/eks
        run: terraform destroy --auto-approve
